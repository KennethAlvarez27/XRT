#!/bin/csh -f
# SPDX-License-Identifier: Apache-2.0
# Copyright (C) 2021-2022 Xilinx, Inc. All rights reserved.
#

# parse out required variables
set list = "$COMMAND_LINE"
# The command word associated with this xbutil invocation
set commandWord = `echo $list | awk 'BEGIN{FS=" "}{print $2}'`
# Get the number of arguments. This script turns spaces into commas to count
# the number of commands. It only really matters for the first couple
set argsplit=(`echo "$list" | sed -e "s/ /@/g"`)
set argsplit=(`echo "$argsplit" | sed "s/[^a-zA-Z@/']//g"`)
set argsplit_counter=(`echo "$argsplit" | sed "s/[a-zA-Z/']//g"`)
set commandCount = (`echo $argsplit_counter | awk '{print length($0)}'`)
set previousWord = `echo $argsplit | awk 'BEGIN{FS="@"}{NF=NF-1;print $NF}'`
# This is the word on the righthand side
set currentWord = `echo $argsplit | awk 'BEGIN{FS="@"}{print $NF}'`


# The options for the current command line statement
set programOptions = ""
# Handle the default xbutil options first
if($commandCount == "1") then
    set programOptions="program validate examine configure reset"
# All other commands enter into this case
else
  set commonSubCommands="--verbose --batch --force --help -h --version --device -d"

  # First handle the gathering of all options unique to each command
  switch($commandWord)
    case "program":
      set programOptions="${commonSubCommands} --user -u"
      breaksw
    case "validate":
      set programOptions="${commonSubCommands} --run -r --format -f --output -o"
      breaksw
    case "examine":
      set programOptions="${commonSubCommands} --report -r --format -f --output -o"
      breaksw
    case "configure":
      set programOptions="${commonSubCommands} --host-mem --p2p --size"
      breaksw
    case "reset":
      set programOptions="${commonSubCommands} --type -t"
      breaksw
    # Return an empty reply if an invalid command is entered
    default:
      breaksw
  endsw

  # If the current word requires an argument, clear the option list
  switch($previousWord)
    case "device":
    case "d":
      set programOptions=(`xbutil examine | sed -n '/Devices present/,/^$/ s/[ \[]*\(0000:[0-9]\+:[0-9]\+.1\)].*/\1/p'`)
      breaksw
    case "user":
    case "u":
      set programOptions=""
      breaksw
    case "format":
    case "f":
      set programOptions="JSON JSON-2020.2"
      breaksw
    case "output":
    case "o":
      set programOptions=""
      breaksw
    case "type":
    case "t":
      set programOptions="hot"
      breaksw
    # -r shorthand applies to multiple commands under xbutil and requires additional processing
    # Assuming we want to add something here one day
    case "report":
    case "run":
    case "r"
      if ($commandWord == "validate") then
        set programOptions=$(xbutil validate --help | sed -n '/--run/,/--output/ s/        [ ]\+\([A-Za-z0-9\-]\+\)[ ]\+- .*/\1/p')
      else if ($commandWord == "examine") then
        set programOptions=$(xbutil examine --help | sed -n '/--report/,/--format/ s/        [ ]\+\([A-Za-z0-9\-]\+\)[ ]\+- .*/\1/p')
      else
        set programOptions=""
      endif
      breaksw
    # do not modify the option list if the argument is not required
    default:
      breaksw
  endsw
endif

# Printout the options for complete to register them
echo $programOptions
